@model dynamic
<div class="row mt-2">
    @* <h2 class="text-center">Equipos por Tipo</h2> *@
    <div class="col-md-6 col-12 mb-2" id="equipmentChartContainer" style="width:50%; height:400px;"></div>

    @* <h2 class="text-center">Equipos por Área</h2> *@
    <div class="col-md-6 col-12 mb-2" id="areaChartContainerBasic" style="width:50%; height:400px;"></div>

    @* <h2 class="text-center">Equipos por Zona</h2> *@
    <div class="col-md-6 col-12 mb-2" id="zoneChartContainer" style="width:50%; height:400px;"></div>

    @* <h2 class="text-center">Equipos por Área con Tipos</h2> *@
    <div class="col-md-12 col-12 mb-2" id="areaChartContainer" style="width:50%; height:400px;"></div>

</div>


<button id="generateReportButton" class="btn btn-primary text-center">Generar Reporte PDF</button>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/offline-exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>


<script src="https://code.highcharts.com/highcharts.js"></script>
<script>
    // Datos de Equipos por Tipo
    var dataEquiposPorTipo = [];
    @foreach (var item in Model.EquiposPorTipo)
    {
        <text>
                dataEquiposPorTipo.push(['@item.TipoEquipo', @item.Cantidad]);
        </text>
    }

    Highcharts.chart('equipmentChartContainer', {
        chart: {
            type: 'pie'
        },
        title: {
            text: 'Cantidad de Equipos por Tipo'
        },
        series: [{
            name: 'Cantidad',
            colorByPoint: true,
            data: dataEquiposPorTipo
        }],
        tooltip: {
            pointFormat: '{series.name}: <b>{point.y}</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>'
                }
            }
        },
        
    });



    // Datos de Equipos por Área
    var dataEquiposPorArea = [];
    @foreach (var item in Model.EquiposPorArea)
    {
        <text>
                dataEquiposPorArea.push(['@item.Area', @item.Cantidad]);
        </text>
    }

    Highcharts.chart('areaChartContainerBasic', {
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Cantidad de Equipos por Área'
        },
        xAxis: {
            type: 'category'
        },
        yAxis: {
            title: {
                text: 'Cantidad'
            }
        },
        series: [{
            name: 'Cantidad',
            data: dataEquiposPorArea
        }]
    });



    // Datos de Equipos por Zona
    var dataEquiposPorZona = [];
    @foreach (var item in Model.EquiposPorZona)
    {
        <text>
                dataEquiposPorZona.push(['@item.Zona', @item.Cantidad]);
        </text>
    }

    Highcharts.chart('zoneChartContainer', {
        chart: {
            type: 'pie'
        },
        title: {
            text: 'Cantidad de Equipos por Zona'
        },
        xAxis: {
            type: 'category'
        },
        yAxis: {
            title: {
                text: 'Cantidad'
            }
        },
        series: [{
            name: 'Cantidad',
            data: dataEquiposPorZona
        }]
    });



    // Datos para la gráfica de Equipos por Área y Tipo
        // Datos para la gráfica de Equipos por Área y Tipo
    var categoriasAreas = [];
    var tiposEquipos = {};
    @foreach (var item in Model.EquiposPorAreaConTipo)
    {
        <text>
                if (!categoriasAreas.includes('@item.Area')) {
                    categoriasAreas.push('@item.Area');
                }
                if (!tiposEquipos['@item.TipoEquipo']) {
                    tiposEquipos['@item.TipoEquipo'] = [];
                }
                tiposEquipos['@item.TipoEquipo'].push({
                    area: '@item.Area',
                    cantidad: @item.Cantidad
                });
        </text>
    }

    // Preparar series de datos
    var seriesData = [];
    for (var tipo in tiposEquipos) {
        var data = categoriasAreas.map(area => {
            var tipoData = tiposEquipos[tipo].find(t => t.area === area);
            return tipoData ? tipoData.cantidad : 0;
        });
        seriesData.push({
            name: tipo,
            data: data
        });
    }

    // Configurar el gráfico
    Highcharts.chart('areaChartContainer', {
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Cantidad de Equipos por Área y Tipo',
            align: 'left'
        },
        xAxis: {
            categories: categoriasAreas,
            title: {
                text: 'Áreas'
            },
            gridLineWidth: 1
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Cantidad'
            },
            labels: {
                overflow: 'justify'
            },
            gridLineWidth: 1
        },
        legend: {
            reversed: true
        },
        tooltip: {
            shared: true,
            useHTML: true,
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                         '<td style="padding:0"><b>{point.y}</b></td></tr>',
            footerFormat: '</table>'
        },
        plotOptions: {
            series: {
                stacking: 'normal',
                dataLabels: {
                    enabled: true
                }
            }
        },
        credits: {
            enabled: false
        },
        series: seriesData
    });

</script>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/offline-exporting.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/canvg/3.0.7/umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/svg2pdf.js/2.3.7/svg2pdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    document.getElementById('generateReportButton').addEventListener('click', function () {
        window.location.href = '/Graficos/GenerarReporteConGrafico'; // Redirige a la función que genera el reporte con gráficos
        console.log("Reporte con gráfico generado");
    });
</script>
